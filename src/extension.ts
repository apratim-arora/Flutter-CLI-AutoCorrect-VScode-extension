import * as vscode from "vscode";

function correctCommand(input: string): string {
  const flutterCommands = [
    // General Flutter Commands
    "flutter",
    "flutter doctor",
    "flutter doctor -v",
    "flutter clean",
    "flutter pub get",
    "flutter pub upgrade",
    "flutter pub downgrade",
    "flutter pub outdated",
    "flutter pub cache repair",
    "flutter pub cache clean",
    "flutter pub run",
    "flutter pub run build_runner build",
    "flutter pub run build_runner watch",
    "flutter pub run build_runner serve",
    "flutter pub run build_runner test",
    "flutter pub run build_runner clean",
    "flutter pub run build_runner build --delete-conflicting-outputs",
    "flutter pub run build_runner watch --delete-conflicting-outputs",
    "flutter pub run build_runner serve --delete-conflicting-outputs",
    "flutter pub run build_runner test --delete-conflicting-outputs",
    "flutter pub run build_runner clean --delete-conflicting-outputs",
    "flutter analyze",
    "flutter analyze --watch",
    "flutter analyze --fatal-infos",
    "flutter analyze --fatal-warnings",
    "flutter test",
    "flutter test --coverage",
    // "flutter test --name <test_name>",
    // "flutter test --plain-name <test_name>",
    // "flutter test --tags <tag>",
    // "flutter test --exclude-tags <tag>",
    // "flutter test --concurrency <threads>",
    // "flutter test --test-randomize-ordering-seed=<seed>",
    "flutter test --update-goldens",
    "flutter test --machine",
    "flutter create",
    // "flutter create --org <organization>",
    // "flutter create --project-name <project_name>",
    // "flutter create --template <template>",
    // "flutter create --platforms <platforms>",
    "flutter devices",
    "flutter emulators",
    // "flutter emulators --launch <emulator_id>",
    // "flutter emulators --create [--name xyz]",
    "flutter upgrade",
    "flutter downgrade",
    "flutter config",
    "flutter config --enable-web",
    "flutter config --enable-linux-desktop",
    "flutter config --enable-macos-desktop",
    "flutter config --enable-windows-desktop",
    "flutter config --enable-android",
    "flutter config --enable-ios",
    "flutter config --clear-features",
    "flutter precache",
    "flutter precache --all-platforms",
    "flutter precache --universal",
    "flutter precache --platforms=<platforms>",
    "flutter run",
    "flutter run --debug",
    "flutter run --release",
    "flutter run --profile",
    "flutter run --verbose",
    "flutter run -v",
    "flutter run -d <device_id>",
    "flutter run -d all",
    "flutter run -d chrome",
    "flutter run -d edge",
    "flutter channel",
    "flutter channel stable",
    "flutter channel beta",
    "flutter channel dev",
    "flutter channel master",
    "flutter --version",
    "flutter --help",
    "flutter --suppress-analytics",
    "flutter attach",
    "flutter attach --debug-port",
    "flutter attach --device-id",
    "flutter attach --app-id",
    "flutter attach --pid-file",
    "flutter attach --disable-service-auth-codes",
    "flutter attach --start-paused",
    "flutter attach --disable-observatory",
    "flutter attach --no-version-check",
    "flutter attach --debug-uri",
    "flutter attach --project-root",
    "flutter attach --target",
    "flutter attach --dart-define",
    "flutter attach --flavor",
    "flutter attach --route",
    "flutter attach --use-application-binary",
    "flutter attach --trace-startup",

    // Flutter Build Commands
    "flutter build aar",
    "flutter build aar --debug",
    "flutter build aar --release",
    "flutter build aar --profile",
    "flutter build aar --no-debug",
    "flutter build aar --no-release",
    "flutter build aar --no-profile",
    "flutter build aar --no-build",
    "flutter build aar --build-number",
    "flutter build aar --build-name",
    "flutter build aar --target",
    "flutter build aar --split-debug-info",
    "flutter build aar --obfuscate",
    "flutter build aar --dart-define",
    "flutter build aar --no-shrink",
    "flutter build aar --tree-shake-icons",
    "flutter build aar --track-widget-creation",
    "flutter build aar --analyze-size",
    "flutter build aar --code-size-directory",
    "flutter build aar --bundle-sksl-path",
    "flutter build aar --performance-measurement-file",
    "flutter build aar --dart-define-from-file",

    // Flutter Emulator Commands
    "flutter emulators --launch",
    "flutter emulators --create",

    // Flutter Test Commands
    "flutter test --run-skipped",
    // "flutter run --flavor <flavor>",
    // "flutter run --dart-define=<key>=<value>",
    // "flutter run --route=<route>",
    // "flutter run --target=<target_file>",
    // "flutter run --observatory-port=<port>",
    "flutter run --disable-service-auth-codes",
    "flutter run --start-paused",
    // "flutter run --use-application-binary=<path>",
    "flutter run --trace-startup",
    "flutter run --resident",
    "flutter run --benchmark",
    "flutter run --update-packages",
    "flutter run --machine",
    "flutter run --hot",
    // "flutter run --pid-file=<file>",
    // "flutter run --devtools-server-address=<address>",
    // "flutter run --web-port=<port>",
    // "flutter run --web-hostname=<hostname>",
    "flutter run --profile-memory",
    // "flutter run --dart-flags=<flags>",
    "flutter run --enable-software-rendering",
    "flutter run --skia-deterministic-rendering",
    "flutter run --trace-systrace",
    "flutter run --trace-skia",
    "flutter run --endless-trace-buffer",
    "flutter run --dump-skp-on-shader-compilation",
    "flutter run --cache-sksl",
    "flutter run --purge-persistent-cache",
    "flutter run --null-assertions",
    "flutter run --enable-impeller",
    "flutter run --impeller-backend=<backend>",
    "flutter build apk",
    "flutter build apk --debug",
    "flutter build apk --release",
    "flutter build apk --profile",
    // "flutter build apk --flavor <flavor>",
    // "flutter build apk --target-platform <platforms>",
    "flutter build apk --split-per-abi",
    // "flutter build apk --split-debug-info=<directory>",
    "flutter build apk --obfuscate",
    // "flutter build apk --dart-define=<key>=<value>",
    "flutter build apk --no-shrink",
    "flutter build apk --tree-shake-icons",
    "flutter build apk --track-widget-creation",
    // "flutter build apk --build-number=<build_number>",
    // "flutter build apk --build-name=<build_name>",
    // "flutter build apk --target=<target_file>",
    "flutter build apk --analyze-size",
    // "flutter build apk --code-size-directory=<directory>",
    // "flutter build apk --bundle-sksl-path=<path>",
    // "flutter build apk --performance-measurement-file=<file>",
    // "flutter build apk --dart-define-from-file=<path>",
    "flutter build appbundle",
    "flutter build appbundle --debug",
    "flutter build appbundle --release",
    "flutter build appbundle --profile",
    // "flutter build appbundle --flavor <flavor>",
    // "flutter build appbundle --target-platform <platforms>",
    "flutter build appbundle --split-per-abi",
    // "flutter build appbundle --split-debug-info=<directory>",
    "flutter build appbundle --obfuscate",
    // "flutter build appbundle --dart-define=<key>=<value>",
    "flutter build appbundle --no-shrink",
    "flutter build appbundle --tree-shake-icons",
    "flutter build appbundle --track-widget-creation",
    // "flutter build appbundle --build-number=<build_number>",
    // "flutter build appbundle --build-name=<build_name>",
    // "flutter build appbundle --target=<target_file>",
    // "flutter build appbundle --code-size-directory=<directory>",
    "flutter build appbundle --analyze-size",
    // "flutter build appbundle --bundle-sksl-path=<path>",
    // "flutter build appbundle --performance-measurement-file=<file>",
    // "flutter build appbundle --dart-define-from-file=<path>",
    "flutter build ios",
    "flutter build ios --debug",
    "flutter build ios --release",
    "flutter build ios --profile",
    "flutter build ios --flavor <flavor>",
    "flutter build ios --simulator",
    "flutter build ios --no-codesign",
    // Flutter Build Commands
    // "flutter build ios --export-options-plist=<path>",
    // "flutter build ios --export-method=<method>",
    // "flutter build ios --dart-define=<key>=<value>",
    "flutter build ios --codesign",
    "flutter build ios --no-codesign",
    "flutter build ios --simulator",
    // "flutter build ios --target=<target_file>",
    // "flutter build ios --build-number=<build_number>",
    // "flutter build ios --build-name=<build_name>",
    // "flutter build ios --flavor <flavor>",
    "flutter build ios --obfuscate",
    // "flutter build ios --split-debug-info=<directory>",
    // "flutter build ios --dart-define-from-file=<path>",
    // "flutter build ios --bundle-sksl-path=<path>",
    // "flutter build ios --performance-measurement-file=<file>",
    "flutter build ios --analyze-size",
    // "flutter build ios --code-size-directory=<directory>",

    // Flutter Install Command
    "flutter install",
    // "flutter install -d <device_id>",

    // Flutter Logs Command
    "flutter logs",
    // "flutter logs -d <device_id>",

    // Flutter Screenshot Command
    "flutter screenshot",
    "flutter screenshot --output=<path>",
    // "flutter screenshot -d <device_id>",

    // Flutter Symbolize Command
    "flutter symbolize",
    // "flutter symbolize --input=<stack_trace_file>",
    // "flutter symbolize --engine-version=<engine_version>",

    // Flutter Drive Command
    "flutter drive",
    // "flutter drive --target=<target_file>",
    // "flutter drive --driver=<driver_file>",
    // "flutter drive --flavor <flavor>",
    // "flutter drive --dart-define=<key>=<value>",
    "flutter drive --profile",
    "flutter drive --release",
    "flutter drive --trace-startup",
    // "flutter drive --route=<route>",
    "flutter drive --keep-app-running",
    // "flutter drive --use-existing-app=<url>",
    "flutter drive --build",
    "flutter drive --no-build",
    "flutter drive --android-emulator",
    "flutter drive --android-device-serial",
    "flutter drive --ios-simulator",
    // "flutter drive --browser-name=<browser>",
    "flutter drive --headless",
    // "flutter drive --chrome-binary=<path>",
    "flutter drive --write-sksl-on-exit",
    "flutter drive --cache-sksl",
    "flutter drive --purge-persistent-cache",
    "flutter drive --null-assertions",
    "flutter drive --enable-impeller",
    // "flutter drive --impeller-backend=<backend>",

    // Flutter Custom Devices Commands
    "flutter custom-devices list",
    "flutter custom-devices add",
    "flutter custom-devices delete",
    "flutter custom-devices reset",

    // Flutter Gen-L10n Command
    "flutter gen-l10n",
    // "flutter gen-l10n --arb-dir=<directory>",
    // "flutter gen-l10n --template-arb-file=<file>",
    // "flutter gen-l10n --output-dir=<directory>",
    // "flutter gen-l10n --output-localization-file=<file>",
    // "flutter gen-l10n --output-class=<name>",
    // "flutter gen-l10n --preferred-supported-locales=<locales>",
    // "flutter gen-l10n --untranslated-messages-file=<file>",
    "flutter gen-l10n --no-synthetic-package",
    "flutter gen-l10n --no-nullable-getter",
    "flutter gen-l10n --use-deferred-loading",
    "flutter gen-l10n --format",
    "flutter gen-l10n --no-format",
    "flutter gen-l10n --required-resource-attributes",
    "flutter gen-l10n --nullable-getter",
    "flutter gen-l10n --header",
    // "flutter gen-l10n --header-file=<file>",
    // "flutter gen-l10n --header-output=<file>",
    "flutter gen-l10n --use-legacy-encoding",
    "flutter gen-l10n --no-use-legacy-encoding",

    // Flutter Assemble Command
    "flutter assemble",
    "flutter assemble -dTargetPlatform=android",
    "flutter assemble -dBuildMode=release",
    "flutter assemble -dTargetFile=lib/main.dart",
    "flutter assemble -dTreeShakeIcons=true",
    "flutter assemble -dSplitDebugInfo=/<output_directory>",
    "flutter assemble -dDartObfuscation=true",
    "flutter assemble -dTrackWidgetCreation=true",
    "flutter assemble -dBuildNumber=1",
    "flutter assemble -dBuildName=1.0.0",
    "flutter assemble -dExtraFrontEndOptions=--enable-experiment=non-nullable",
    "flutter assemble -dExtraGenSnapshotOptions=--print-instructions",
    // "flutter assemble -dCodeSizeDirectory=/<output_directory>",
    // "flutter assemble -dPerformanceMeasurementFile=/<output_file>",
    // "flutter assemble -dBundleSkSLPath=/<sksl_file>",
    "flutter assemble -dDartDefines=FOO=bar,BAZ=qux",
    "flutter assemble -dExtraGenSnapshotOptions=--obfuscate",
    "flutter assemble -dExtraFrontEndOptions=--enable-asserts",
    "flutter assemble -dEnableImpeller=true",
    "flutter assemble -dImpellerBackend=metal",
    "flutter assemble -dIosArchs=arm64,armv7",
    "flutter assemble -dAndroidArchs=arm64,armeabi-v7a,x86_64",
    "flutter assemble -dWebRenderer=canvaskit",
    "flutter assemble -dEnableExperiment=non-nullable",
    "flutter assemble -dEnableNullSafety=true",
    "flutter assemble -dEnableSoundNullSafety=true",
    "flutter assemble -dEnableWeb=true",
    "flutter assemble -dEnableLinuxDesktop=true",
    "flutter assemble -dEnableMacOSDesktop=true",
    "flutter assemble -dEnableWindowsDesktop=true",
    "flutter assemble -dEnableAndroid=true",
    "flutter assemble -dEnableIOS=true",
    "flutter assemble -dEnableFuchsia=true",
    "flutter assemble -dEnableWebServer=true",
    "flutter assemble -dEnableChrome=true",
    "flutter assemble -dEnableEdge=true",
    "flutter assemble -dEnableFirefox=true",
    "flutter assemble -dEnableSafari=true",
    "flutter assemble -dEnableCustomDevices=true",
    "flutter assemble -dEnableHotReload=true",
    "flutter assemble -dEnableHotRestart=true",
    "flutter assemble -dEnableFastStart=true",
    "flutter assemble -dEnableNullAssertions=true",
    "flutter assemble -dEnableAsserts=true",
    "flutter assemble -dEnableExperiment=non-nullable",
    "flutter assemble -dEnableExperiment=extension-methods",
    "flutter assemble -dEnableExperiment=triple-shift",
    "flutter assemble -dEnableExperiment=constant-update-2018",
    // Flutter Assemble Command
    "flutter assemble",
    "flutter assemble -dTargetPlatform=android",
    "flutter assemble -dBuildMode=release",
    "flutter assemble -dTargetFile=lib/main.dart",
    "flutter assemble -dTreeShakeIcons=true",
    // "flutter assemble -dSplitDebugInfo=/<output_directory>",
    "flutter assemble -dDartObfuscation=true",
    "flutter assemble -dTrackWidgetCreation=true",
    "flutter assemble -dBuildNumber=1",
    "flutter assemble -dBuildName=1.0.0",
    "flutter assemble -dExtraFrontEndOptions=--enable-experiment=non-nullable",
    "flutter assemble -dExtraGenSnapshotOptions=--print-instructions",
    // "flutter assemble -dCodeSizeDirectory=/<output_directory>",
    // "flutter assemble -dPerformanceMeasurementFile=/<output_file>",
    // "flutter assemble -dBundleSkSLPath=/<sksl_file>",
    "flutter assemble -dDartDefines=FOO=bar,BAZ=qux",
    "flutter assemble -dExtraGenSnapshotOptions=--obfuscate",
    "flutter assemble -dExtraFrontEndOptions=--enable-asserts",
    "flutter assemble -dEnableImpeller=true",
    "flutter assemble -dImpellerBackend=metal",
    "flutter assemble -dIosArchs=arm64,armv7",
    "flutter assemble -dAndroidArchs=arm64,armeabi-v7a,x86_64",
    "flutter assemble -dWebRenderer=canvaskit",
    "flutter assemble -dEnableExperiment=non-nullable",
    "flutter assemble -dEnableNullSafety=true",
    "flutter assemble -dEnableSoundNullSafety=true",
    "flutter assemble -dEnableWeb=true",
    "flutter assemble -dEnableLinuxDesktop=true",
    "flutter assemble -dEnableMacOSDesktop=true",
    "flutter assemble -dEnableWindowsDesktop=true",
    "flutter assemble -dEnableAndroid=true",
    "flutter assemble -dEnableIOS=true",
    "flutter assemble -dEnableFuchsia=true",
    "flutter assemble -dEnableWebServer=true",
    "flutter assemble -dEnableChrome=true",
    "flutter assemble -dEnableEdge=true",
    "flutter assemble -dEnableFirefox=true",
    "flutter assemble -dEnableSafari=true",
    "flutter assemble -dEnableCustomDevices=true",
    "flutter assemble -dEnableHotReload=true",
    "flutter assemble -dEnableHotRestart=true",
    "flutter assemble -dEnableFastStart=true",
    "flutter assemble -dEnableNullAssertions=true",
    "flutter assemble -dEnableAsserts=true",
    "flutter assemble -dEnableExperiment=non-nullable",
    "flutter assemble -dEnableExperiment=extension-methods",
    "flutter assemble -dEnableExperiment=triple-shift",
    "flutter assemble -dEnableExperiment=constant-update-2018",

    // Dart Commands
    "dart create",
    "dart analyze",
    "dart analyze --fatal-warnings",
    "dart analyze --fatal-infos",
    "dart create my_dart_project",
    "dart create -t console my_console_project",
    "dart format .",
    "dart format lib/",
    "dart fix --apply",
    "dart fix --dry-run",
    "dart pub get",
    "dart pub upgrade",
    "dart pub upgrade --major-versions",
    "dart pub outdated",
    "dart run",
    "dart run build_runner build",
    "dart run build_runner watch",
    "dart run build_runner build --delete-conflicting-outputs",
    "dart run build_runner watch --delete-conflicting-outputs",
    "dart compile exe bin/main.dart",
    "dart compile kernel bin/main.dart",
    "dart compile aot-snapshot bin/main.dart",
    "dart compile jit-snapshot bin/main.dart",
    "dart compile wasm bin/main.dart",
    "dart compile exe",
    "dart compile kernel",
    "dart compile aot-snapshot",
    "dart compile jit-snapshot",
    "dart compile wasm",
    "dart test",
    "dart test --coverage=coverage/",
    "dart test --run-skipped",
    "dart test --concurrency=2",
  ];

  function levenshtein(a: string, b: string): number {
    const dp = Array(a.length + 1)
      .fill(null)
      .map(() => Array(b.length + 1).fill(0));
    for (let i = 0; i <= a.length; i++) {
      dp[i][0] = i;
    }
    for (let j = 0; j <= b.length; j++) {
      dp[0][j] = j;
    }
    for (let i = 1; i <= a.length; i++) {
      for (let j = 1; j <= b.length; j++) {
        const cost = a[i - 1] === b[j - 1] ? 0 : 1;
        dp[i][j] = Math.min(
          dp[i - 1][j] + 1,
          dp[i][j - 1] + 1,
          dp[i - 1][j - 1] + cost
        );
      }
    }
    return dp[a.length][b.length];
  }

  let bestMatch = input;
  let lowestDistance = Infinity;

  for (const command of flutterCommands) {
    const distance = levenshtein(input, command);
    if (distance < lowestDistance && distance <= 3) {
      lowestDistance = distance;
      bestMatch = command;
    }
  }

  return bestMatch;
}

export function activate(context: vscode.ExtensionContext) {
  context.subscriptions.push(
    vscode.commands.registerCommand(
      "flutter-cli-autocorrect.fixCommand",
      async () => {
        const userInput = await vscode.window.showInputBox({
          prompt: "Enter a Flutter/Dart CLI command",
          placeHolder: "flutter run, dart pub get, etc.",
        });

        if (userInput) {
          const correctedCommands = userInput
            .split(";")
            .map((cmd) => correctCommand(cmd.trim()))
            .join(" ; ");
          const terminal =
            vscode.window.activeTerminal ||
            vscode.window.createTerminal("Flutter Dart Terminal");
          terminal.show();
          terminal.sendText(correctedCommands);
          vscode.window.showInformationMessage(
            `Executed: ${correctedCommands}`
          );
        }
      }
    )
  );
}

export function deactivate() {}